CSS三种引入方式

1.行内式（内联式）

	语法：

<开始标签 style="属性1:属性值1;属性2:属性值2">

	内容

</结束标签>

	注：

	1.style其实就是标签的属性。

	2.样式属性和值中间是:。

	3.多组属性值之间用;隔开。

	4.只控制当前的标签和以及嵌套在其中的子标签。

	缺点：

	1.造成代码冗余。

	2.没有实现样式和结构相分离。

2.内部式（内嵌式）

	语法：

	<style>

	div{

            color: red;

            font-size: 12px;

        }

	</style>

	注：

	1.style标签一般位于head标签中，当然理论上他可

	以放在HTML文档的任何地方。

	2.type="text/css" 在html5中可以省略。

	3.只能控制当前的页面。

	缺点：

	1.没有彻底分离。

3.外部式（外链式）

	语法：

<link rel="stylesheet" href="css/demo000.css">

	注：

	1.link 是个单标签。

	2.link标签需要放在head头部标签中，并且指定

	link标签的三个属性（type可以省略）。

	属性：

	rel：定义当前文档与被链接文档之间的关系，在这

	里需要指定为“stylesheet”，表示被链接的文档

	是一个样式表文件。

	type：定义所链接文档的类型，在这里需要指定为“text/CSS”，表示链接的外部文件为CSS样式表。我们都可以省略。

	href：定义所链接外部样式表文件的URL，可以是相

	对路径，也可以是绝对路径。（必填项）

总结CSS样式规则：

	1.选择器用于指定CSS样式作用的HTML标签，花括号内是对该对象设置的具体样式。

	2.属性和属性值以“键值对”的形式出现。

	3.属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等。

	4.属性和属性值之间用英文“:”连接。

	5.多个“键值对”之间用英文“;”进行区分。

基本选择器：

1.标签选择器：

	概念：

	标签选择器（元素选择器）是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。

	语法：

	标签名{

            color: skyblue;

            background-color: pink;

        }

	作用：

	标签选择器 可以把某一类标签全部选择出来 比如所有的div标签 和 所有的 span标签。

	优点：是能快速为页面中同类型的标签统一样式。

	缺点：不能设计差异化样式。

2.类选择器：

	语法：

	结构：

	<div class="box">我是div</div>

	样式：

	.box{

            background-color: skyblue;

            font-size: 20px;

        }

	优点：可以为元素对象定义单独或相同的样式。 可以选择一个或者多个标签。

	注：

	1.类选择器使用“.”（英文点号）进行标识，后面紧跟类名(自定义我们自己命名的)。

	2.长名称或词组可以使用中横线来为选择器命名。

	3.不要纯数字、中文等命名， 尽量使用英文字母来表示。

类选择器特殊用法（多类名）：

	语法：

	结构：

	<p class="box one">我是p</p>

    	<p class="box two">我是p</p>

    	<p class="box three">我是p</p>

	样式：

	p{

            color: red;

        }

        .box{

            background-color: pink;

        }

        .one{

            font-size: 18px;

        }

        .two{

            font-size: 24px;

        }

        .three{

            font-size: 30px;

        }

	注：

	1.各个类名中间用空格隔开。

	2.多类名选择器在后期布局比较复杂的情况下，还是较多使用的。

ID选择器：

	语法：

	结构：

	<div id="box0">我是div</div>

	样式：

	#box0{

            width: 200px;

            height: 200px;

            background-color: red;

            color: blue;

        }

	注：

	1.元素的id值是唯一的，只能对应于文档中某一个具体的元素。

	2.用法基本和类选择器相同。通配符选择器：

	语法：

	结构：

	<div>我是div</div>

    	<p>我是p</p>

	样式：

	*{

            margin: 0px;

            padding: 0px;

        }

	注:1.  会匹配页面所有的元素，降低页面响应速度，不建随便使用。

CSS字体

字体大小：

	语法：

	font-size: 100px;

	相对长度单位：

	em 根据父类的字体大小设置倍数

	px 像素单位

	绝对长度单位：

	in 英寸

	cm 厘米

	mm 毫米

	pt 点/磅

	注：

	1.我们文字大小以后，基本就用px了，其他单位很少使用。

	2.谷歌浏览器默认的文字大小为16px。

	3.但是不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小。一般给body指定整个页面文字的大小。

字体样式：

	
	语法：

	font-family: "宋体","微软雅黑","黑体";

	注：

	1.各种字体之间必须使用英文状态下的逗号隔开。

	2.中文字体需要加英文状态下的引号，英文字体一般不需要加引号。当需要设置英文字体时，英文字体名必须位于中文字体名之前。

	3.如果字体名中包含空格、#、$等符号，则该字体必须加英文状态下的单引号或双引号，例如font-family: "Times New Roman";。

	4.尽量使用系统默认字体，保证在任何用户的浏览器中都能正确显示。

CSS Unicode字体

	原因:

	1.在 CSS 中设置字体名称，直接写中文是可以的。但是在文件编码（GB2312、UTF-8 等）不匹配时会产生乱码的错误。

	2.xp 系统不支持 类似微软雅黑的中文。

	解决方案：

	1.你可以使用英文来替代。 比如font-family:"Microsoft Yahei"。

	2.在 CSS 直接使用 Unicode 编码来写字体名称可以避免这些错误。使用 Unicode 写中文字体名称，浏览器是可以正确的解析的。

字体粗细

	语法：

	font-weight: 700;

	属性：

	normal 默认值；

	bold 定义粗体；

	100-900 400等同于normal，而700等同于bold。

	注：我们平时更喜欢用数字来表示加粗和不加粗。

字体倾斜

	语法：

	font-style: italic;

	属性：

	normal 默认值；

	italic 字体倾斜；

	注：平时我们很少给文字加斜体，反而喜欢给斜体标签（em，i）改为普通模式。

复合字体样式属性：

	语法：

	font: italic 900 20px "黑体";

	注：

	1.使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，各个属性以空格隔开。

	2.其中不需要设置的属性可以省略（取默认值），但必须保留font-size和font-family属性，否则font属性将不起作用。

文本颜色：

	语法：

	color: rgba(255, 0, 0,0.5);

	取值方式：

	1.英文单词 例如：red;

	2.十六进制值 例如：#ff0000 简写：#f00

	3.rgb(red,green,blue)取参：0-255

	4.rgba(0-255,0-255,0-255,0-1) a:透明度

	注：

	我们实际工作中，用16进制的写法是最多的，而且我们更喜欢简写方式比如 #f00 代表红色。

文本水平对齐方式：

	语法：

	text-align: center;

	属性：

	left：向左对齐；

	right：向右对齐；

	center：居中对齐；

	注：让盒子里面的内容水平居中而不是让盒子居中对齐

行间距（行高）：

	语法：

	line-height: 200px;

	单位：

	line-height常用的属性值单位有三种，分别为像素

	px，相对值em和百分比%，实际工作中使用最多的是

	像素px。
首行缩进：

	语法：

	text-indent: 2em;

	属性值：

	1.其属性值可为不同单位的数值、em字符宽度的倍数、或相对于浏览器窗口宽度的百分比%，允许使用负值。

	2.建议使用em作为设置单位。

	注：1em 就是一个字的宽度 如果是汉字的段落，1em就是一个汉字的宽度。

文本修饰线：

	语法：

	text-decoration: line-through;

	参数：

	none：

	默认。定义标准的文本。 取消下划线。

	underline：

	定义文本下的一条线。下划线也是我们链接自带的

	overline：

	定义文本上的一条线。

	line-through：

	定义穿过文本下的一条线。（贯穿线/删除线）